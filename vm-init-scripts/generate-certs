#!/bin/bash
#Siehe auch https://docs.docker.com/engine/security/https/

SERVERNAME=$1
SERVERIP=$2
PASSWORD=$3
TARGETDIR=$4

if [[ -z $SERVERNAME ]]; then
   echo "no servername as first parameter"
   exit 1
fi

if [[ -z $SERVERIP ]]; then
   echo "no serverip as second parameter"
   exit 1
fi

if [[ -z $PASSWORD ]]; then
   echo "no password as third parameter"
   exit 1
fi

if [[ -z $TARGETDIR ]]; then
   echo "no targetdir as fourth parameter"
   exit 1
fi

mkdir -p $TARGETDIR


openssl genrsa -aes256 -passout pass:$PASSWORD -out $TARGETDIR/ca-key.pem 4096

openssl req -passin pass:$PASSWORD -new -x509 -days 700 -key $TARGETDIR/ca-key.pem -sha256 -out $TARGETDIR/ca.pem -subj "/C=/ST=/L=/O=MyCompany/OU=IT/CN=DockerProd/emailAddress=test@example.de"

openssl genrsa -out $TARGETDIR/server-key.pem 4096
openssl req -subj "/CN=$SERVERNAME" -new -key $TARGETDIR/server-key.pem -out $TARGETDIR/server.csr

echo "subjectAltName = DNS:$SERVERNAME,IP:$SERVERIP" > $TARGETDIR/extfile.cnf

openssl x509 -passin pass:$PASSWORD -req -days 700 -in $TARGETDIR/server.csr -CA $TARGETDIR/ca.pem -CAkey $TARGETDIR/ca-key.pem -CAcreateserial -out $TARGETDIR/server-cert.pem -extfile $TARGETDIR/extfile.cnf

#Client
openssl genrsa -out $TARGETDIR/client-key.pem 4096
openssl req -subj '/CN=client' -new -key $TARGETDIR/client-key.pem -out $TARGETDIR/client.csr
echo "extendedKeyUsage = clientAuth" > $TARGETDIR/extfile.cnf
openssl x509 -passin pass:$PASSWORD -req -days 365 -sha256 -in $TARGETDIR/client.csr -CA $TARGETDIR/ca.pem -CAkey $TARGETDIR/ca-key.pem -CAcreateserial -out $TARGETDIR/client-cert.pem -extfile $TARGETDIR/extfile.cnf

rm -v $TARGETDIR/client.csr $TARGETDIR/server.csr $TARGETDIR/extfile.cnf

cp $TARGETDIR/ca.pem $TARGETDIR/ca-cert.pem
chmod -v 0400 $TARGETDIR/ca-key.pem $TARGETDIR/client-key.pem $TARGETDIR/server-key.pem
chmod -v 0444 $TARGETDIR/ca.pem $TARGETDIR/ca-cert.pem $TARGETDIR/server-cert.pem $TARGETDIR/client-cert.pem
